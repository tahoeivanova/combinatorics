def factorial(n):
    f = 1
    for x in range(1, n+1):
        f *= x
    return f

def P_rep(n,m): # p repeatable
    add = 1
    for x in m:
        add *= factorial(x) # произведение факториалов всех повторений, порядок не важен
    return factorial(n)/add # делим на сумму повтрений

def C_n_m(n, m):
    return factorial(n)/(factorial(n-m)*factorial(m))

def C_n_m_rep(n,m):
    return factorial(n+m-1) / (factorial(n-1) * factorial(m))


def A_(n,m):
    return C_n_m(n, m) * factorial(m)

def A_rep(n,m):
    return n**m


if __name__ == '__main__':
    print('Задача 1')
    print('Перечислим все возможные сочетания двух фруктов из списка фруктов: яблоко, груша и банан')
    result = C_n_m(3, 2)
    print('Ответ: ', result)
    print()
    print('Задача 2')
    print('Сколькими способами можно взять хотя бы один фрукт из Задачи 1?')
    result = C_n_m(3, 1) +  C_n_m(3, 2) +  C_n_m(3, 3)
    print('Ответ: ', result)
    print('Задача 3')
    print('Сколькими способами можно рассадить 6 человек за круглым столом?')
    result = factorial(6)
    print('Ответ: ', result)
    print()
    print('Задача 4')
    print('В коробке находится 15 деталей. Сколькими способами можно взять 4 из них?')
    result = C_n_m(15,4)
    print('Ответ: ', result)
    print()
    print('Задача 5')
    print('В шахматном турнире участвует 20 человек и каждый с каждым играет \
    по одной партии. Сколько всего партий сыграно в турнире?')
    '''т.е. найти кол-во комбинаций по 2 человека из 20
    (Сколькими способами можно взять 2 человека из 20?)
    '''
    result = C_n_m(20, 2)
    print('Ответ: ', result)
    print()
    print('Задача 6')
    print('Три игрока сели играть в покер. Сколькими способами им можно сдать \
    по одной карте? (колода содержит 36 карт)')
    # Для начала вычислим, сколькими способами можно извлечь 3 карты из колоды (по оджной трем игрокам)
    с_3 = C_n_m(36, 3)
    print(f'{с_3} способами можно выбрать 3 карты из колоды в 36 карт.')
    # рассмотрим одну из 7140 возможных комбинаций, например: Король пик, 6 червей , 5 треф.
    # эти карты можно распределить между 3 игроками следующими способами:
    # КП, 6Ч, 5Т
    # КП, 5Т, 6Ч
    # 5Т, КП, 6Ч
    # 5Т, 6Ч, КП
    # 6Ч, 5Т, КП
    # 6Ч, КП, 5Т
    P = factorial(3)
    print(f'{P} способами можно рапределить 3 карты, извлеченные из колоды.')
    a_ = A_(36, 3)
    print(f"{a_} способами можно сдать по одной карте участникам")

    # Сложение и умножение в комбинаторике
    print()
    print('Пример')
    print('Студенческая группа состоит из 23 человек, среди которых 10 парней и 13 девушек.\
          Сколькими способами можно составить пару из юношей и девушек?')
    '''C_1_10 = 10 # можно выбрать 1 парня
    C_1_13 = 13 # можно выбрать 1 девушку
    C_1_10 * C_1_13 = 10 * 13 = 130
    Пояснение: каждый объект из одного множества может составить пару с каждым\
    объектом другого множества
    '''


    print()
    print('Задача 7')
    print('В фирме работает 23 человек, среди которых 10 мужчин и 13 девушек.\
     Сколькими способами можно выбрать двух человек одинакового пола?')
    # Мы не можем сразу воспользоваться формулой C_n_m поскольку общее количество сочетаний включает в себя пары разного пола.
    # Условие подразумевает, что необходимо выбрать ИЛИ! двух мужчин ИЛИ! двух девушек

    # Сначала считаем, сколькими способами можно выбрать 2 мужчин из 10
    m = C_n_m(10,2)
    # Считаем, сколькими способами можно выбрать 2 женщину из 13
    d = C_n_m(13,2)
    # складываем результаты
    res = m + d
    print(f'{res} способами можно выбрать двух человек одинакового пола')

    print()
    print('Задача 8')
    print('Коллектив из задания 7, организовал корпоративный вечер. \
    Сколькими способами можно рассадить 4-х человек за столом так чтобы за столом\
    сидели 2 мужчины и 2 девушки?')
    res = m * d
    print(f'{res} способами можно рассадить 4 человек так, чтобы за стором сидели 2 мужчины и 2 девушки?')


    print()
    print('Задача 9')
    print('Сколько различных сочетаний можно получить перестановкой букв в слове: ГАГАРИН?')
    n = 7 # количество букв
    # буква Г - 2 раза, А - два раза, все остальные - по одному разу
    m = [2,2,1,1,1]
    res = P_rep(n, m)
    print(f"{res} сочетаний можно получить перестановкой букв в слове")
    print()
    print('Задача 10')
    print('На фудкорте можно купить супы, гамбургеры и пиццу.\
    Сколькими способами можно заказать 7 блюд?')
    n = 3
    m = 7
    res = C_n_m_rep(n,m)
    print(f'{res} спсообами можно заказать 7 блюд.')

    print()
    print('Задача 10')
    print('Сколько существует всего вариантов пин-кода из 4-х цифр?')
    n = 10 # всего 10 цифр
    m = 4 # комбинации по 4
    res = A_rep(n,m)
    print(f'Всего {res} комбиниций')

    # Альтернативный способ
    d1 = C_n_m(10,1) # способами можно выбрать 1-ую цифру
    d2 = C_n_m(10,1) # способами можно выбрать 2-ую цифру
    d3 = C_n_m(10,1) # способами можно выбрать 3-ую цифру
    d4 = C_n_m(10,1) # способами можно выбрать 4-ую цифру

    res = d1 * d2 * d3 * d4
    print(f'Всего {res} комбиниций (альтернативный способ)')








